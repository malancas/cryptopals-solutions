/*
Initial round
use addRoundKey

9 main rounds
Must generate s box and rcon

1. Subbytes key
-Take the first hex digit from the encrypted text block and use the 
s-box to find its new translation (the first digit in the hex number
is represented by the rows. The second digit is represented by the colunms)
-Replace the hex digit with the new digit
-Do this will all hex digits in the current encrypted text block

2. ShiftRows
For each row in the text block, shift 1 more to the left
than in the above row such that the first row shifts 0 times
the second row shifts 1 time, the third shifts 2 two times, etc.

3. MixColumns
-The four hex numbers of one column are modulo multiplied
in Rijndael's Galois Field by a given matrix
-The original column is replaced with the result
-Repeat this with all columns

4. addRoundKey
-Each column of the encrypted text is xored with the 
corresponding row of the round key
-The result column replaces the original encrypted column
-Repeat for all columns in the encrypted text

Last round
1. Subbytes
2. ShiftRows
3. addRoundKey

Key scheduler
1. Get initial key
Words (32 bit words are made up of columns) in positions
that are mulitples of four are calculated by applying the 
RotWord and SubBytes transformation to the previous word (column)
2. Xoring the result to a word four positions earlier (wi - 4) 
then xor this result to a round constant Rcon

The remaining columns are found by xoring wi-1 with wi-4

Repeat this to get all the round keys
128 round keys are is a square of 4 hex columns (each column is 4 hex digits)
*/